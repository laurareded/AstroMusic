// <auto-generated />
using System;
using AstromusicApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AstromusicApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250617150725_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AstromusicApi.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<int>("ZodiacSignId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZodiacSignId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AstromusicApi.models.ZodiacSign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("EndDay")
                        .HasColumnType("int");

                    b.Property<int>("EndMonth")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("SongArtist")
                        .HasColumnType("longtext");

                    b.Property<string>("SongLink")
                        .HasColumnType("longtext");

                    b.Property<int>("StartDay")
                        .HasColumnType("int");

                    b.Property<int>("StartMonth")
                        .HasColumnType("int");

                    b.Property<string>("ThemeSong")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ZodiacSigns");
                });

            modelBuilder.Entity("AstromusicApi.models.User", b =>
                {
                    b.HasOne("AstromusicApi.models.ZodiacSign", "ZodiacSign")
                        .WithMany("Users")
                        .HasForeignKey("ZodiacSignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZodiacSign");
                });

            modelBuilder.Entity("AstromusicApi.models.ZodiacSign", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
